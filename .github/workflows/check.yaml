name: test

on:
  push:
    branches: [dev]
    paths:
      - "**.py"
      - ".github/workflows/check.yaml"
      - "pyproject.toml"
  pull_request:
    branches: [dev, main]
    paths:
      - "**.py"
      - ".github/workflows/check.yaml"
      - "pyproject.toml"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    name: check ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        run: |
          uv python install ${{ matrix.python-version }}
          uv python pin ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          export UV_PYTHON=$(uv run python -c "import sys; print(sys.executable)")
          uv pip compile pyproject.toml -o requirements.txt --extra test
          uv pip install -r requirements.txt

      - name: Install self
        run: |
          export UV_PYTHON=$(uv run python -c "import sys; print(sys.executable)")
          uvx --from build pyproject-build --installer uv
          uv pip install dist/airflow_serde_polars-0.0.0-py3-none-any.whl --reinstall-package airflow-serde-polars

      - name: Test with pytest
        run: |
          uv run pytest -m "airflow or not airflow"
          